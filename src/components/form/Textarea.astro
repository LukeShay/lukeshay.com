---
import ExclamationCircle from "@components/icons/ExclamationCircle.astro"
import { clsx } from "@utils/cn"

// prettier-ignore
export type ExcludedProps = "name" | "class" | "aria-describedby" | "aria-invalid"

// prettier-ignore
export type Props = Omit<astroHTML.JSX.TextareaHTMLAttributes, ExcludedProps> & {
	name: string
	label: string
	helpText?: string
	required?: boolean
	errorText?: string
}

const { name, label, helpText, required, errorText, ...rest } = Astro.props

const inputDivClassName = clsx("mt-1", errorText && "relative")
const inputClassName = clsx(
	"block w-full border border-slate-500 sm:text-sm focus:ring-2 focus:ring-sky-500 outline-none p-2 dark:text-slate-300 bg-inherit",
	errorText && "border-red-500",
)
const helpTextClassName = clsx(
	"mt-2 text-sm",
	errorText ? "text-red-500" : "text-gray-500",
)
---

<div class="dark:text-slate-300 text-slate-800">
	<label for={name} class="block text-sm font-medium">
		{label}{required && <span class="ml-1 text-red-500">*</span>}
	</label>
	<div class={inputDivClassName}>
		<textarea
			id={name}
			name={name}
			class={inputClassName}
			aria-describedby={helpText ? `${name}-help` : undefined}
			aria-invalid={errorText ? "true" : undefined}
			required={required}
			{...rest}></textarea>
		{
			errorText && (
				<div class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3">
					<ExclamationCircle class="h-5 w-5 text-red-500" />
				</div>
			)
		}
	</div>
	{
		(helpText || errorText) && (
			<p class={helpTextClassName} id={`${name}-help`}>
				{errorText ?? helpText}
			</p>
		)
	}
	{!helpText && !errorText && <div class="h-6" />}
</div>
