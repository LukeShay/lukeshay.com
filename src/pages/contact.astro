---
import { Contact } from "@server/models/contact.ts"
import Input from "@components/form/Input.astro"
import Textarea from "@components/form/Textarea.astro"
import Hero from "@components/Hero.astro"
import Layout from "@layouts/Layout.astro"

const errors = {
  root: "",
  name: "",
  email: "",
  linkedin: "",
  message: "",
}

if (Astro.request.method === "POST") {
  errors.root = ""
  errors.fullName = ""
  errors.email = ""
  errors.linkedin = ""
  errors.message = ""

  try {
    const data = await Astro.request.formData();
    const honeypot = data.get("honeypot");
    const fullName = data.get("full-name");
    const email = data.get("email");
    const linkedin = data.get("linkedin");
    const message = data.get("message");

    if (honeypot) {
      return;
    }

    if (!fullName) {
      errors.fullName = "Name is required";
    }

    if (!email) {
      errors.email = "Email is required";
    }

    if (!linkedin) {
      errors.linkedin = "Linkedin is required";
    }

    if (!message) {
      errors.message = "Message is required";
    }

    await Contact.create({
      email,
      fullName,
      linkedin,
      message,
    }).go();

    const searchParams = new URLSearchParams()

    searchParams.set("message", "Your contact information was submitted")

    return Astro.redirect(`/?${searchParams.toString()}`)
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }

    errors.root = "There was an error submitting the form. Please try again.";
  }
}
---

<Layout title="Luke Shay | Contact">
	<main>
		<section title="Information" class="mb-12 dark:text-slate-100">
			<Hero
				title="Contact"
				subtitle="Enter your information and I will get back to you."
			/>
		</section>
		<form class="space-y-4" name="contact" method="post">
			<p class="hidden">
				<label>
					Don't fill this out if you're human: <input name="honeypot" />
				</label>
			</p>
      <Input label="Name" name="full-name" required type="text" errorText={errors.name} />
			<Input
				label="Email"
				name="email"
				required
				type="email"
				placeholder="email@placeholder.com"
        errorText={errors.email}
			/>
			<Input
				label="Linkedin"
				name="linkedin"
				required
				type="url"
				placeholder="https://www.linkedin.com/in/luke-shay/"
        errorText={errors.linkedin}
			/>
      <Textarea label="Message" name="message" required rows={4} errorText={errors.message} />
      {errors.root && (
        <p class="pb-6 text-red-500 mt-2 text-sm">
          {errors.root}
        </p>
      )}
			<button
				type="submit"
				class="block rounded-lg shadow-lg border border-sky-600 dark:border-sky-400 dark:shadow-slate-900 dark:bg-slate-900 shadow-slate-800/5 text-sky-600 dark:text-sky-400 sm:text-sm outline-none py-3 px-4 hover:bg-slate-100 dark:hover:bg-slate-800 w-36 mx-auto"
			>
				Submit
			</button>
		</form>
	</main>
</Layout>
